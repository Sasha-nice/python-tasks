"""
Согласно правилам «поросячьей латыни» английские слова
при разговоре преобразуются так:

Если слово начинается на согласную — эта согласная переносится
в конец слова, после чего добавляется «ay»: "latin" ⇒ "atinlay"
Если слово начинается на несколько согласных, они все переносятся
в конец слова, после чего добавляется «ay»: "stupid" ⇒ "upidstay"
Если слово начинается на гласную, "aouie" (не "y"!) и имеет более
одного слога, лидирующая гласная и все согласные за ней переносятся
в конец с добавлением «ay»: "under" ⇒ "erunday"
(в Википедии это второй вариант)
для нашего удобства непроизносимые гласные тоже считаются слогом,
например "are" ⇒ "earay";
(так исторически не было: язык всё-таки разговорный)
Односложные слова, начинающиеся на гласную,
 просто дополняются «yay»: "egg" ⇒ "eggyay"
Апостроф считается согласной, а дефис — разделителем(опять-таки для простоты)
Слова без гласных не изменяются
Написать программу, которая построчно вводит «английский» текст (текст,
содержащий последовательности латинских букв и другие символы;
последняя строка пустая) и выводит перевод на поросячью латынь
(для простоты любая последовательность английских букв с гласными
считается словом). Обратите внимание на то, что слово,
написанное со прописной буквы, в поросячьей латыни также пишется
со прописной буквы. Более одной прописной буквы в слове не встречается.
"""
import re

s = input()
while s != '':
    out = ''
    s1 = s + ' '
    for line in re.split(r'[^a-zA-Z\']', s):
        f = False
        if re.search(r'[^a-zA-Z\s\'].*', s1):
            s1 = re.search(r'[^a-zA-Z\'].*', s1).group()
        else:
            s1 = ''
        if line != '':
            if line[0].isupper():
                f = True
                line = line[0].lower() + line[1:]
            res = re.search(r'^[^aouie]+', line)
            if res is not None:
                rem = re.search(r'[aouie]+.*', line)
                if rem is not None:
                    word = rem.group() + res.group() + 'ay'
                else:
                    word = res.group()
            res = re.search(r'^[aouie]+', line)
            if res is not None:
                rem = re.search(r'^[aouie][^aouie]*', line)
                ree = re.search(r'[aouie].*', line[1:])
                if ree is not None:
                    word = ree.group() + rem.group() + 'ay'
                else:
                    if rem is not None:
                        word = rem.group() + 'yay'
                    else:
                        word = line + 'yay'
            if f:
                word = word[0].upper() + word[1:]
        else:
            word = ''
        out += word
        if s1 != '':
            out += s1[0]
            s1 = s1[1:]
        else:
            out += ' '
    print(out)
    s = input()
